Jogo de drag and drop

Exemplo js
"const draggableElements = document.querySelectorAll(".draggable");
const droppableElements = document.querySelectorAll(".droppable");

draggableElements.forEach(elem => {
  elem.addEventListener("dragstart", dragStart); // Fires as soon as the user starts dragging an item - This is where we can define the drag data
  // elem.addEventListener("drag", drag); // Fires when a dragged item (element or text selection) is dragged
  // elem.addEventListener("dragend", dragEnd); // Fires when a drag operation ends (such as releasing a mouse button or hitting the Esc key) - After the dragend event, the drag and drop operation is complete
});

droppableElements.forEach(elem => {
  elem.addEventListener("dragenter", dragEnter); // Fires when a dragged item enters a valid drop target
  elem.addEventListener("dragover", dragOver); // Fires when a dragged item is being dragged over a valid drop target, repeatedly while the draggable item is within the drop zone
  elem.addEventListener("dragleave", dragLeave); // Fires when a dragged item leaves a valid drop target
  elem.addEventListener("drop", drop); // Fires when an item is dropped on a valid drop target
});

// Drag and Drop Functions

//Events fired on the drag target

function dragStart(event) {
  event.dataTransfer.setData("text", event.target.id); // or "text/plain" but just "text" would also be fine since we are not setting any other type/format for data value
}

//Events fired on the drop target

function dragEnter(event) {
  if(!event.target.classList.contains("dropped")) {
    event.target.classList.add("droppable-hover");
  }
}

function dragOver(event) {
  if(!event.target.classList.contains("dropped")) {
    event.preventDefault(); // Prevent default to allow drop
  }
}

function dragLeave(event) {
  if(!event.target.classList.contains("dropped")) {
    event.target.classList.remove("droppable-hover");
  }
}

function drop(event) {
  event.preventDefault(); // This is in order to prevent the browser default handling of the data
  event.target.classList.remove("droppable-hover");
  const draggableElementData = event.dataTransfer.getData("text"); // Get the dragged data. This method will return any data that was set to the same type in the setData() method
  const droppableElementData = event.target.getAttribute("data-draggable-id");
  const isCorrectMatching = draggableElementData === droppableElementData;
  if(isCorrectMatching) {
    const draggableElement = document.getElementById(draggableElementData);
    event.target.classList.add("dropped");
    // event.target.style.backgroundColor = draggableElement.style.color; // This approach works only for inline styles. A more general approach would be the following: 
    event.target.style.backgroundColor = window.getComputedStyle(draggableElement).color;
    draggableElement.classList.add("dragged");
    draggableElement.setAttribute("draggable", "false");
    event.target.insertAdjacentHTML("afterbegin", `<i class="fas fa-${draggableElementData}"></i>`);
  }
}"



fogeDoVirus

var character = document.getElementById("character");
document.addEventListener("click",jump);
function jump(){
    if(character.classList == "animate"){return;}
    character.classList.add("animate");
    setTimeout(removeJump,300); //300ms = length of animation
};
function removeJump(){
    character.classList.remove("animate");
}



var block = document.getElementById("block");
function checkDead(){
    let characterTop = parseInt(window.getComputedStyle(character).getPropertyValue("top"));
    let blockLeft = parseInt(window.getComputedStyle(block).getPropertyValue("left"));
    if(blockLeft<20 && blockLeft>-20 && characterTop>=130){
        alert("Game over");
    }
}

setInterval(checkDead, 10);





MATA O VIRUS 


const holes = document.querySelectorAll(".hole");
const score = document.querySelector(".score");
const moles = document.querySelectorAll(".mole");
const startBtn = document.querySelector(".startBtn");
const countDown = document.querySelector(".countDown");

let lastHole;
let timeUp = false;
let timeLimit = 20000;
let currentScore = 0;
let cuurentCountDown;

function pickRandomHole(holes) {
	const randomHole = Math.floor(Math.random() * holes.length);
	const hole = holes[randomHole];
	if (hole == lastHole) {
		return pickRandomHole(holes);
	}
	lastHole = hole;
	return hole;
}
function popUp() {
	const time = Math.random() * 1300 + 400;
	const hole = pickRandomHole(holes);
	hole.classList.add("up");
	setTimeout(() => {
		hole.classList.remove("up");
		if (!timeUp) popUp();
	}, time);
}
// popUp();

function startGame() {
	cuurentCountDown = timeLimit / 1000;
	score.textContent = 0;
	score.style.display = "block";
	cuurentCountDown.textContent = countDown;
	timeUp = false;
	currentScore = 0;
	popUp();
	setTimeout(() => {
		timeUp = true;
	}, timeLimit);
	let startCountDown = setInterval(() => {
		cuurentCountDown--;
		countDown.textContent = cuurentCountDown;

		if (cuurentCountDown < 0) {
			cuurentCountDown = 0;
			clearInterval(startCountDown);
			countDown.textContent = `Times Up! Thank you for protecting our planet! This is the way!`;
		}
	}, 1000);
}

function whack(event) {
	currentScore++;
	this.style.backgroundImage =
		"url(https://github.com/MohammedHamzaMalik/100-Days-of-JavaScript-Code/blob/main/Day%2097/Whack%20A%20Mole/yoda2.png?raw=true)";
	this.style.pointerEvents = "none";
	setTimeout(() => {
		this.style.backgroundImage =
			"url(https://github.com/MohammedHamzaMalik/100-Days-of-JavaScript-Code/blob/main/Day%2097/Whack%20A%20Mole/yoda1.png?raw=true)";
		this.style.pointerEvents = "all";
	}, 800);
	score.textContent = currentScore;
}
moles.forEach((mole) => mole.addEventListener("click", whack));
startBtn.addEventListener("click", startGame);



PUZZLE

var img = ['https://media.gettyimages.com/photos/cat-headphones-wearing-sunglasses-relaxing-in-the-grass-picture-id512291806?s=2048x2048','https://media.gettyimages.com/vectors/cute-cartoon-dachshunds-in-love-vector-id865392634?s=2048x2048','https://media.gettyimages.com/vectors/heart-shaped-sea-otters-in-love-vector-graphics-vector-id1183276814?s=2048x2048','https://media.gettyimages.com/vectors/funny-no-prob-llama-vector-illustration-vector-id1089951888?s=2048x2048','https://media.gettyimages.com/vectors/cute-sloth-sitting-in-lotus-yoga-pose-cartoon-sloth-bear-vector-vector-id1076571820?s=2048x2048','https://media.gettyimages.com/vectors/hand-drawing-hipster-fantasy-animal-unicorn-illustration-vector-id1065322868?s=2048x2048']
var old = 5
var clicks = 0
function randomize() {
  let root = document.documentElement
  root.style.setProperty('--image','url('+img[old]+')')
  old++
  if(old > 5) {
    old = 0
  }  
  var ul = document.querySelectorAll('#puzz i');
  for(var i=0;i<ul.length;i++){
    ul[i].style.left = Math.random()*(window.innerWidth-100) + 'px'
    ul[i].style.top = Math.random()*(window.innerHeight-100) + 'px'
  }
  // for (var i = ul.children.length; i >= 0; i--) {
  //   ul.appendChild(ul.children[Math.random() * i | 0]);    
  // }
}
randomize()

function reload() {
  var done = document.querySelectorAll('.done')
  done.forEach(function(e){
    e.classList.toggle('done')
  })
  var dropped = document.querySelectorAll('.dropped')
  dropped.forEach(function(e){
    e.classList.toggle('dropped')
  })
  var allDone = document.querySelector('.allDone')
  allDone.style = ''
  allDone.classList.toggle('allDone')
}


// mobile functionality
var p = document.querySelectorAll('#puzz i')
p.forEach(function(e){
  e.addEventListener('mousedown', function(){
    clicks++
    document.querySelector('#clicks').innerHTML = clicks
  })
  e.addEventListener('click', function(){
    if(document.querySelector('.clicked')){
      document.querySelector('.clicked').classList.toggle('clicked')
      e.classList.toggle('clicked')
    } else {
      e.classList.toggle('clicked')  
    }    
  })
})

var fp = document.querySelectorAll('#puz i')
fp.forEach(function(el){
  el.addEventListener('click', function(){
    if(document.querySelector('.clicked')){
      var c = document.querySelector('.clicked')
      if(c.classList.contains(el.classList)) {
        el.classList.add('dropped')
        c.classList.add('done')
        c.classList.toggle('clicked')

        if(document.querySelectorAll('.dropped').length == 9) {
          document.querySelector('#puz').classList.add('allDone')
          document.querySelector('#puz').style.border = 'none'  
          document.querySelector('#puz').style.animation = 'allDone 1s linear forwards'

          setTimeout(function(){
            reload()
            randomize()            
          },1500)
        } 
      }
    }    
  })
})

// desktop drag and drop
function allowDrop(ev) {
  ev.preventDefault();
}

function drag(ev) {
  ev.dataTransfer.setData("text", ev.target.className);  
}

function drop(ev) {
  ev.preventDefault();
  var data = ev.dataTransfer.getData("text")

  if(ev.target.className == data){
    ev.target.classList.add('dropped')
    document.querySelector('.'+data+"[draggable='true']").classList.add('done')

    if(document.querySelectorAll('.dropped').length == 9) {
      document.querySelector('#puz').classList.add('allDone')
      document.querySelector('#puz').style.border = 'none'  
      document.querySelector('#puz').style.animation = 'allDone 1s linear forwards'  

      setTimeout(function(){
        reload()
        randomize()        
      },1500)
    }    
  }  
}



PREENCHE OS ESPAÃ‡OS



                <script>
                    var g;
                    var h;
                    var i;
                    var j;
                    var k;
                    function submit001() {
                        b = input001.value;
                        c = input002.value;
                        d = input003.value;
                        e = input004.value;
                        f = input005.value;
                        if (b == "Jerusalem" || b == "jerusalem") {
                            g = 1;
                            input001.value = b;
                            check001.innerHTML = "<text class=button002>" + "âœ”" + "</text>";
                        } else {
                            input001.value = b;
                            check001.innerHTML = "<text class=button002>" + "âœ–" + "</text>";
                        }

                        if (c == "Amman" || c == "amman") {
                            h = 1
                            input002.value = c;
                            check002.innerHTML = "<text class=button002>" + "âœ”" + "</text>";
                        } else {
                            input002.value = c;
                            check002.innerHTML = "<text class=button002>" + "âœ–" + "</text>";
                        }

                        if (d == "London" || d == "london") {
                            i = 1;
                            input003.value = d;
                            check003.innerHTML = "<text class=button002>" + "âœ”" + "</text>";
                        } else {
                            input003.value = d;
                            check003.innerHTML = "<text class=button002>" + "âœ–" + "</text>";
                        }

                        if (e == "Brasilia" || e == "brasilia") {
                            j = 1;
                            input004.value = e;
                            check004.innerHTML = "<text class=button002>" + "âœ”" + "</text>";
                        } else {
                            input004.value = e;
                            check004.innerHTML = "<text class=button002>" + "âœ–" + "</text>";
                        }

                        if (f == "Ottawa" || f == "ottawa") {
                            k = 1;
                            input005.value = f;
                            check005.innerHTML = "<text class=button002>" + "âœ”" + "</text>";
                        } else {
                            input005.value = f;
                            check005.innerHTML = "<text class=button002>" + "âœ–" + "</text>";
                        }

                        if (g == 1 && h == 1 && i == 1 && j == 1 && k == 1) {
                            message001.innerHTML = "Congratulation! You have successfully finished this quiz.";
                            disappear001.innerHTML = "";
                            reload001.innerHTML = "<div id=center001><button class=button001 onclick=repeat001()>Repeat</button></div>";
                        }
                    }

                    function repeat001() {
                        location.reload();
                    }
                </script>



JOGO DA MEMORIA

const cards = document.querySelectorAll('.memory-card');

let hasFlippedCard = false;
let lockBoard = false;
let firstCard, secondCard;

function flipCard() {
  if (lockBoard) return;
  if (this === firstCard) return;

  this.classList.add('flip');

  if (!hasFlippedCard) {
    hasFlippedCard = true;
    firstCard = this;

    return;
  }

  secondCard = this;
  checkForMatch();
}

function checkForMatch() {
  let isMatch = firstCard.dataset.framework === secondCard.dataset.framework;

  isMatch ? disableCards() : unflipCards();
}

function disableCards() {
  firstCard.removeEventListener('click', flipCard);
  secondCard.removeEventListener('click', flipCard);

  resetBoard();
}

function unflipCards() {
  lockBoard = true;

  setTimeout(() => {
    firstCard.classList.remove('flip');
    secondCard.classList.remove('flip');

    resetBoard();
  }, 1500);
}

function resetBoard() {
  [hasFlippedCard, lockBoard] = [false, false];
  [firstCard, secondCard] = [null, null];
}

(function shuffle() {
  cards.forEach(card => {
    let randomPos = Math.floor(Math.random() * 12);
    card.style.order = randomPos;
  });
})();

cards.forEach(card => card.addEventListener('click', flipCard));

